# Inspired by https://github.com/graysky2/kodi-standalone-service

- name: ensure kodi software is installed
  yum: pkg={{ item }}
  with_items:
    - kodi
    - kodi-pvr-mythtv
    - xorg-x11-xinit
    - xorg-x11-server-Xorg
    - xorg-x11-drv-evdev
    - xorg-x11-drv-qxl
    - mesa-dri-drivers
    - dbus-x11

- name: ensure mariadb user for kodi WatchedList addon exists
  mysql_user: name=kodi
              host=localhost
              password="{{ kodi.db_password }}"
              priv="kodi_%.*:ALL"

- name: ensure mariadb database for kodi WatchedList addon exists
  mysql_db: name=kodi_watched
            encoding=utf8
            collation=utf8_general_ci
  register: kodi_watched_database

- stat: path="/var/lib/backup/{{ ansible_hostname }}/db/kodi_watched_latest.sql"
  register: kodi_watched_database_backup

- name: import mariadb database for kodi WatchedList addon from backup
  mysql_db: name=kodi_watched
            state=import
            target="/var/lib/backup/{{ ansible_hostname }}/db/kodi_watched_latest.sql"
  when: kodi_watched_database.changed and kodi_watched_database_backup.stat.isfile is defined and kodi_watched_database_backup.stat.isfile

- name: ensure kodi user exists
  user: name=kodi
        comment="kodi user"
        uid=420
        groups=audio,video
        shell=/bin/bash
        home=/var/lib/kodi

- name: ensure kodi config directories exist
  file: dest="{{ item }}"
        state=directory
        owner=kodi group=kodi mode=0755
  with_items:
    - /var/lib/kodi/.kodi
    - /var/lib/kodi/.kodi/userdata

- name: ensure kodi tmp directory exists
  file: dest=/var/lib/kodi/.kodi/temp
        state=directory
        owner=kodi group=kodi mode=0755

- name: ensure kodi tmp directory is mounted as tmpfs
  mount: name=/var/lib/kodi/.kodi/temp
        src=none
        fstype=tmpfs
        opts="size=5%"
        dump=0
        passno=0
        state=present

- name: ensure kodi service is installed
  copy: src=kodi.service
        dest=/etc/systemd/system/kodi.service
        owner=root group=root mode=644

- name: ensure kodi service is enabled
  service: name=kodi enabled=yes

- name: ensure kodi advanced settings file is installed
  template: src=advancedsettings.xml.j2
            dest=/var/lib/kodi/.kodi/userdata/advancedsettings.xml
            owner=kodi group=kodi mode=640

- name: ensure kodi service can start using xinit
  lineinfile: dest=/etc/X11/Xwrapper.config
              line="allowed_users = anybody"
              create=yes
              owner=root group=root mode=644
